/*


0========(  VALERIE  )========0

<<<<<<< HEAD
0========(  VALERIE  )========0

Next day: continue to work on built-ins:
1. env
2. unset
3. export
4. cd
5. echo

DONE: env I BROKE IT... snif snif
DONE: exit **need to review the way that I check for numeric arguments.
DONE: pwd **just need to double check for the error message. Might not need

=======
Next day: continue to work on built-ins:
1. unset
2. cd;
3. export
4. echo
>>>>>>> main

DONE: env
DONE: exit **need to review the way that I check for numeric arguments.
DONE: pwd **just need to double check for the error message. Might not need


PARSING: je pourrais aider avec here_doc




0========(  LOYC  )========0

"eat" throught the command line and tokenize gradually

split along |
look for < / <<
	make < the infile
	make << their own command and reset the infile
look for > / >>
	make them the outfile (>> sets flag for replacement)



0====( TEST CASES )====0

cmd
cmd arg1
cmd arg1 arg2

cmd >out1
cmd >>out1

cmd >out1 >out2
cmd >>out1 >>out3

cmd >out1 >>out2
cmd >>out1 >out2

<in1 cmd
<<in1 cmd

<in1 <in2 cmd
<<in1 <<in2

<<in1 <in2 cmd
<in1 <<in2 cmd

<in1 cmd arg1 >out1
<<in1 cmd arg1 >>out1

<in1 <in2 cmd arg1 arg2 >out1 >out2
<<in1 <<in2 cmd arg1 arg2 >>out1 >>out2

cmd1 | cmd2

<<in1 cmd1 | cmd2
cmd1 | <<in1 cmd2

*/
