/*















0========(  LOYC  )========0

split along |
look for < / <<
	make < the infile
	make << their own command and reset the infile
look for > / >>
	make them the outfile (>> sets flag for replacement)



TEST CASES

cmd
cmd arg1
cmd arg1 arg2

cmd >out1
cmd >>out1

cmd >out1 >out2
cmd >>out1 >>out3

cmd >out1 >>out2
cmd >>out1 >out2

<in1 cmd
<<in1 cmd

<in1 <in2 cmd
<<in1 <<in2

<<in1 <in2 cmd
<in1 <<in2 cmd

<in1 cmd arg1 >out1
<<in1 cmd arg1 >>out1

<in1 <in2 cmd arg1 arg2 >out1 >out2
<<in1 <<in2 cmd arg1 arg2 >>out1 >>out2

cmd1 | cmd2

<<in1 cmd1 | cmd2
cmd1 | <<in1 cmd2


struct t_cmd
	char	**cmd_args
	int		argcount		//number of function arguments (0 == no args, <0 == no cmd)

	char	*input
	bool	has_input		//if true: use input fd
	bool	has_inpipe		//else if true: use pipe fd
							//else: use STDIN

	char	*output
	bool	has_output		//if true: use output fd
	bool	has_outpipe		//else if true: use pipe fd
							//else: use STDOUT

	bool	is_herdoc		//call herdoc cmd and pipe out
*/
